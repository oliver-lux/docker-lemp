networks:
    reverse_proxy:
        external: true

volumes:
    mysql_data:
    redis_data:

services:
    nginx:
        build:
            context: ./config/nginx
        volumes:
            - $SOURCE_DIR:/var/www/html
            - ./config/nginx/files/nginx.conf:/etc/nginx/nginx.conf
            - ./config/nginx/files/default.conf:/etc/nginx/conf.d/default.conf
        environment:
            TZ: $TIMEZONE
            VIRTUAL_HOST:
            LETSENCRYPT_HOST: $VIRTUAL_HOST
            LETSENCRYPT_EMAIL:
        depends_on: [php, mysql, redis]
        restart: unless-stopped
        healthcheck:
            test: [CMD-SHELL, curl /dev/null localhost || exit 1]
            interval: 60s
        networks:
            - default
            - reverse_proxy

    php:
        build:
            context: ./config/php
            args:
                USER_ID:
        user: $USER_ID:$USER_ID
        environment:
            TZ: $TIMEZONE
        volumes:
            - $SOURCE_DIR:/var/www/html
            - ./config/deploy/.ssh:/home/www-data/.ssh
            - ./config/php/files/healthcheck.sh:/scripts/healthcheck.sh
            - ./config/php/files/php.production.ini:/usr/local/etc/php/php.ini
        working_dir: /var/www/html
        restart: unless-stopped
        healthcheck:
            test: [CMD-SHELL, sh /scripts/healthcheck.sh]
            interval: 60s

    mysql:
        build: ./config/mysql
        environment:
            TZ: $TIMEZONE
            MYSQL_DATABASE:
            MYSQL_USER:
            MYSQL_PASSWORD:
            MYSQL_ROOT_PASSWORD:
        volumes: [mysql_data:/var/lib/mysql]
        restart: unless-stopped
        healthcheck:
            test: [CMD, mysqladmin, ping, -h, localhost, -u$MYSQL_USER, -p$MYSQL_ROOT_PASSWORD ]
            interval: 60s

    redis:
        image: redis:6-alpine
        volumes: [redis_data:/data]
        environment:
            TZ: $TIMEZONE
        restart: unless-stopped
        healthcheck:
            test: [CMD, redis-cli, ping]
            interval: 60s

    mailhog:
        build: ./config/mailhog
        profiles: [dev]
        environment:
            TZ: $TIMEZONE
        ports: [8025:8025]

    node:
        image: node:lts-alpine3.14
        profiles: [dev]
        volumes: [$SOURCE_DIR:/var/www/html]
        user: $USER_ID:$USER_ID
        environment:
            TZ: $TIMEZONE
        working_dir: /var/www/html
        ports: [3000:3000, 3001:3001]

    npm:
        extends:
            service: node
        entrypoint: [npm]
